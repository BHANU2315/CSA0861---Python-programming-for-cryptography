
print(sumsquare([1, 2, 3, 4, 5])) # [35, 20]
print(sumsquare([2, 4, 6, 8, 10])) # [0, 284]
print(sumsquare([3, 5, 7, 9, 11])) # [385, 0]



3RD QUESTION1ST QUESTION
s_map = {}
t_map = {}

for i in range(len(s)):
    if s[i] in s_map:
        if s_map[s[i]] != t[i]:
            return False
    else:
        if t[i] in t_map:
            return False
        s_map[s[i]] = t[i]
        t_map[t[i]] = s[i]

return True
Test cases
print(isIsomorphic("egg", "add")) # True
print(isIsomorphic("foo", "bar")) # False
print(isIsomorphic("paper", "title")) # True





2ND QUESTION
def sumsquare(l):
odd = 0
even = 0
for num in l:
if num % 2 == 0:
even += num2
else:
odd += num2
return [odd, even]

Test cases
def isHappy(n):
seen = set()
while n != 1:
n = sum([int(i)**2 for i in str(n)])
if n in seen:
return False
seen.add(n)
return True

Test cases
print(isHappy(19)) # True
print(isHappy(2)) # False
print(isHappy(7)) # True



4TH QUESTION
def isPalindrome(x):
if x < 0:
return False
return str(x) == str(x)[::-1]

Test cases
print(isPalindrome(121)) # True
print(isPalindrome(123)) # False
print(isPalindrome(-121)) # False
print(isPalindrome(10)) # False


5TH QUESTION
def bread_discount(loaves):
regular_price = 185 * loaves
discount = regular_price * 0.6
total_price = regular_price - discount
return regular_price, discount, total_price

Read number of loaves from user
loaves = int(input("Enter number of loaves: "))

Calculate prices
regular_price, discount, total_price = bread_discount(loaves)

Display prices
print("Regular price: ${:.2f}".format(regular_price))
print("Discount: ${:.2f}".format(discount))
print("Total price: ${:.2f}".format(total_price))



6TH QUESTION
def maxArea(height):
left = 0
right = len(height) - 1
max_area = 0
while left < right:
max_area = max(max_area, min(height[left], height[right]) * (right - left))
if height[left] < height[right]:
left += 1
else:
right -= 1
return max_area

Test cases
print(maxArea([1,8,6,2,5,4,8,3,7])) # 49
print(maxArea([1,2,3,4,5,6,7,8,9,10])) # 25
print(maxArea([10,9,8,7,6,5,4,3,2,1])) # 25




10TH QUESTION
def modify_string(s):
    result = ""
    for char in s:
        freq = s.count(char)
        new_char = chr(ord(char) + freq)
        result += new_char
    return result
